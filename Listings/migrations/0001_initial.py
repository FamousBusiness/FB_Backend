# Generated by Django 4.2.5 on 2023-11-24 07:32

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="BrandBusinessPage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("brand_name", models.CharField(max_length=1000, unique=True)),
                (
                    "business_name",
                    models.CharField(
                        blank=True, max_length=100, null=True, unique=True
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, null=True, unique=True
                    ),
                ),
                (
                    "mobile_number",
                    models.CharField(blank=True, max_length=12, null=True, unique=True),
                ),
                (
                    "whatsapp_number",
                    models.CharField(blank=True, max_length=12, null=True, unique=True),
                ),
                (
                    "GSTN",
                    models.CharField(blank=True, max_length=50, null=True, unique=True),
                ),
                (
                    "CIN_No",
                    models.CharField(blank=True, max_length=50, null=True, unique=True),
                ),
                ("address", models.CharField(blank=True, max_length=200, null=True)),
                (
                    "about",
                    models.TextField(blank=True, null=True, verbose_name="About us"),
                ),
                ("web_url", models.URLField(blank=True, null=True)),
                (
                    "turn_over",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Annual Turn Over",
                    ),
                ),
                (
                    "employee_count",
                    models.BigIntegerField(
                        blank=True, null=True, verbose_name="Total Number of Employee"
                    ),
                ),
                (
                    "establishment",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MaxValueValidator(9999),
                            django.core.validators.MinValueValidator(1000),
                        ],
                        verbose_name="Establishment Year",
                    ),
                ),
                (
                    "nature",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Nature of Business",
                    ),
                ),
                (
                    "service",
                    models.TextField(
                        blank=True, null=True, verbose_name="Product & Service"
                    ),
                ),
                (
                    "icons",
                    models.FileField(
                        default="Brand_Pics/brand_icon.jpg",
                        upload_to="Brand_Pics",
                        verbose_name="Brand Icons",
                    ),
                ),
            ],
            options={
                "ordering": ["brand_name"],
            },
        ),
        migrations.CreateModel(
            name="Business",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "business_name",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="Business Name"
                    ),
                ),
                ("state", models.CharField(blank=True, max_length=80, null=True)),
                ("city", models.CharField(blank=True, max_length=50, null=True)),
                ("pincode", models.CharField(blank=True, max_length=15, null=True)),
                ("address", models.CharField(blank=True, max_length=200, null=True)),
                (
                    "whatsapp_number",
                    models.CharField(blank=True, max_length=12, null=True, unique=True),
                ),
                (
                    "mobile_number",
                    models.CharField(blank=True, max_length=12, null=True, unique=True),
                ),
                ("email", models.EmailField(blank=True, max_length=200, null=True)),
                (
                    "website_url",
                    models.URLField(blank=True, null=True, verbose_name="Website URL"),
                ),
                (
                    "GSTIN",
                    models.CharField(blank=True, max_length=25, null=True, unique=True),
                ),
                (
                    "business_info",
                    models.TextField(
                        blank=True, null=True, verbose_name="About my Business"
                    ),
                ),
                (
                    "established_on",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MaxValueValidator(9999),
                            django.core.validators.MinValueValidator(1000),
                        ],
                        verbose_name="Establishment Year",
                    ),
                ),
                (
                    "services",
                    models.TextField(
                        blank=True, null=True, verbose_name="Product and Service"
                    ),
                ),
                ("verified", models.BooleanField(blank=True, default=False, null=True)),
                ("trusted", models.BooleanField(blank=True, default=False, null=True)),
                ("trending", models.BooleanField(blank=True, default=False, null=True)),
                (
                    "authorized",
                    models.BooleanField(
                        default=False, verbose_name="Authorized Dealer"
                    ),
                ),
                (
                    "picture",
                    models.ImageField(
                        default="cart.png",
                        upload_to="Business_pics",
                        verbose_name="Profile Pic",
                    ),
                ),
                ("likes", models.IntegerField(blank=True, default=0, null=True)),
                ("reviews", models.IntegerField(blank=True, default=0, null=True)),
                (
                    "keywords",
                    models.TextField(
                        blank=True, null=True, verbose_name="Search Keywords"
                    ),
                ),
                ("opening_time", models.TimeField(blank=True, null=True)),
                ("closing_time", models.TimeField(blank=True, null=True)),
                (
                    "brand",
                    models.ManyToManyField(
                        blank=True,
                        to="Listings.brandbusinesspage",
                        verbose_name="Brand Name",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("type", models.CharField(max_length=30, unique=True)),
                (
                    "image",
                    models.FileField(
                        default="category_pics/B2B.jpg", upload_to="category_pics"
                    ),
                ),
                ("trending", models.BooleanField(default=False)),
            ],
            options={
                "ordering": ["type"],
            },
        ),
        migrations.CreateModel(
            name="Email",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sender", models.EmailField(max_length=254)),
                ("receiver", models.EmailField(max_length=254)),
                ("sent_date", models.DateField(auto_now_add=True)),
                ("sent_time", models.TimeField(auto_now_add=True)),
                ("subject", models.CharField(max_length=1000)),
                ("verified", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="FrontCarousel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True, null=True, upload_to="carousel_images"
                    ),
                ),
                (
                    "video",
                    models.FileField(
                        blank=True, null=True, upload_to="FrontCarousel_videos/"
                    ),
                ),
                (
                    "url",
                    models.URLField(blank=True, null=True, verbose_name="Page Url"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Order2",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.FloatField(null=True, verbose_name="Amount")),
                ("isPaid", models.BooleanField(default=False)),
                (
                    "status",
                    models.CharField(
                        default="Pending", max_length=254, verbose_name="Payment Status"
                    ),
                ),
                (
                    "provider_order_id",
                    models.CharField(max_length=40, verbose_name="Order ID"),
                ),
                (
                    "payment_id",
                    models.CharField(max_length=36, verbose_name="Payment ID"),
                ),
                (
                    "signature_id",
                    models.CharField(max_length=128, verbose_name="Signature ID"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PlanDetail",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("Starter", "Starter"),
                            ("Business", "Business"),
                            ("Enterprises", "Enterprises"),
                            ("Silver", "Silver"),
                            ("Gold", "Gold"),
                        ],
                        max_length=25,
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("Page Owner", "Page Owner"),
                            ("Ads", "Ads"),
                            ("Bulk Email", "Bulk Email"),
                            ("Bulk Text Message", "Bulk Text Message"),
                            ("Bulk Messenger", "Bulk Messenger"),
                        ],
                        max_length=25,
                        verbose_name="Marketing Type",
                    ),
                ),
                ("tag_line", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "benefit1",
                    models.CharField(
                        blank=True,
                        max_length=300,
                        null=True,
                        verbose_name="Premium plan benefit",
                    ),
                ),
                (
                    "benefit2",
                    models.CharField(
                        blank=True,
                        max_length=300,
                        null=True,
                        verbose_name="Premium plan benefit",
                    ),
                ),
                (
                    "benefit3",
                    models.CharField(
                        blank=True,
                        max_length=300,
                        null=True,
                        verbose_name="Premium plan benefit",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PremiumPlan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("price", models.PositiveIntegerField(verbose_name="plan price")),
                (
                    "quantity",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Views/Mail/Message Qty"
                    ),
                ),
                (
                    "plan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Listings.plandetail",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Wallet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "transaction_id",
                    models.CharField(editable=False, max_length=32, unique=True),
                ),
                ("price", models.BigIntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        default="Pending", max_length=25, verbose_name="Payment Status"
                    ),
                ),
                ("date", models.DateField(auto_now_add=True)),
                ("time", models.TimeField(auto_now_add=True)),
                (
                    "plan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Listings.premiumplan",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserPremiumPlan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_active", models.BooleanField(default=False)),
                (
                    "plan",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="Listings.premiumplan",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TextMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message", models.TextField()),
                ("sent_on", models.DateTimeField(auto_now_add=True)),
                ("verified", models.BooleanField(default=False)),
                (
                    "category",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="Listings.category",
                    ),
                ),
                (
                    "receiver",
                    models.ManyToManyField(
                        related_name="Received_Message", to=settings.AUTH_USER_MODEL
                    ),
                ),
                (
                    "sender",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SubCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, max_length=100, null=True, unique=True
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Listings.category",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProductAndService",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100,
                        unique=True,
                        verbose_name="Product & Service Name",
                    ),
                ),
                (
                    "picture",
                    models.ImageField(
                        default="Product_Service_Pics/default.png",
                        upload_to="Product_Service_Pics",
                    ),
                ),
                (
                    "business",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Listings.business",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.FloatField(verbose_name="Amount")),
                ("order_date", models.DateTimeField(auto_now=True)),
                ("isPaid", models.BooleanField(default=False)),
                (
                    "status",
                    models.CharField(
                        default="Pending", max_length=254, verbose_name="Payment Status"
                    ),
                ),
                (
                    "provider_order_id",
                    models.CharField(max_length=40, verbose_name="Order ID"),
                ),
                (
                    "payment_id",
                    models.CharField(max_length=36, verbose_name="Payment ID"),
                ),
                (
                    "signature_id",
                    models.CharField(max_length=128, verbose_name="Signature ID"),
                ),
                (
                    "plan",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="Listings.premiumplan",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Lead",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "mobile_number",
                    models.CharField(blank=True, max_length=12, null=True),
                ),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                ("expired", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Listings.category",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Job",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("full_time_job", models.BooleanField(default=False)),
                ("part_time_job", models.BooleanField(default=False)),
                ("role", models.CharField(max_length=10)),
                ("internship", models.BooleanField(default=False)),
                ("work_abroad", models.BooleanField(default=False)),
                ("tag", models.CharField(max_length=20)),
                ("min_monthly_salary", models.PositiveBigIntegerField()),
                ("max_monthly_salary", models.PositiveBigIntegerField()),
                ("experience", models.PositiveIntegerField()),
                ("localities", models.CharField(max_length=50)),
                ("city", models.CharField(max_length=200)),
                ("state", models.CharField(max_length=200)),
                ("description", models.CharField(max_length=500)),
                ("email", models.EmailField(max_length=254)),
                ("phone_number", models.CharField(max_length=12)),
                ("verified", models.BooleanField(default=False)),
                ("expired", models.BooleanField(default=False)),
                ("created_on", models.DateTimeField()),
                (
                    "posted_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BusinessMobileNumbers",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "mobile_number",
                    models.CharField(
                        max_length=14, unique=True, verbose_name="Mobile Number"
                    ),
                ),
                (
                    "business",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Listings.business",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BusinessImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        default="Business_pics/cat-img.png",
                        upload_to="Business_pics",
                        verbose_name="Profile Pic",
                    ),
                ),
                (
                    "business",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Listings.business",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="business",
            name="category",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="Listings.category",
                verbose_name="Category",
            ),
        ),
        migrations.AddField(
            model_name="business",
            name="owner",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
                verbose_name="Business Owner",
            ),
        ),
        migrations.AddField(
            model_name="business",
            name="subcategory",
            field=models.ManyToManyField(
                blank=True, to="Listings.subcategory", verbose_name="Sub Category"
            ),
        ),
        migrations.AddField(
            model_name="brandbusinesspage",
            name="category",
            field=models.ManyToManyField(to="Listings.category"),
        ),
        migrations.CreateModel(
            name="BrandBanner",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    models.FileField(
                        default="brand_banner.jpg",
                        upload_to="Brand_Banners",
                        verbose_name="Brand Banner",
                    ),
                ),
                (
                    "brand",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Listings.brandbusinesspage",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Banner",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    models.FileField(
                        default="Banner/default-banner.jpeg",
                        upload_to="Category_Banner",
                    ),
                ),
                ("state", models.CharField(max_length=25, verbose_name="State")),
                ("city", models.CharField(max_length=25, verbose_name="City")),
                ("verified", models.BooleanField(default=False)),
                ("expired", models.BooleanField(default=False)),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="Listings.category",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Assigned_Benefits",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ads_allowed", models.PositiveIntegerField(default=0)),
                ("ads_posted", models.PositiveIntegerField(default=0)),
                ("ads_views", models.PositiveIntegerField(default=0)),
                ("email_allowed", models.PositiveIntegerField(default=0)),
                ("email_used", models.PositiveIntegerField(default=0)),
                ("message_allowed", models.PositiveIntegerField(default=0)),
                ("messages_used", models.PositiveIntegerField(default=0)),
                ("jobpost_allowed", models.PositiveIntegerField(default=0)),
                ("job_posted", models.PositiveIntegerField(default=0)),
                ("messenger_message_allowed", models.PositiveIntegerField(default=0)),
                ("messenger_messege_used", models.PositiveIntegerField(default=0)),
                ("banner_allowed", models.PositiveIntegerField(default=0)),
                ("banner_used", models.PositiveIntegerField(default=0)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ADS",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("location", models.CharField(max_length=10)),
                (
                    "condition",
                    models.CharField(
                        choices=[("Social", "Social"), ("Business", "Business")],
                        max_length=10,
                    ),
                ),
                ("title", models.CharField(max_length=80)),
                ("description", models.CharField(max_length=100)),
                ("price", models.CharField(max_length=8)),
                ("tag", models.CharField(max_length=20)),
                ("item_sale", models.BooleanField(default=False)),
                ("vehicle_sale", models.BooleanField(default=False)),
                ("property_sale", models.BooleanField(default=False)),
                ("start_time", models.DateTimeField(blank=True, null=True)),
                ("end_time", models.DateTimeField(blank=True, null=True)),
                ("expired", models.BooleanField(default=False, editable=False)),
                ("verified", models.BooleanField(default=False)),
                ("offer", models.CharField(max_length=10)),
                (
                    "img1",
                    models.ImageField(default="upload_img.png", upload_to="ad_pics"),
                ),
                (
                    "img2",
                    models.ImageField(default="upload_img.png", upload_to="ad_pics"),
                ),
                (
                    "img3",
                    models.ImageField(default="upload_img.png", upload_to="ad_pics"),
                ),
                (
                    "img4",
                    models.ImageField(default="upload_img.png", upload_to="ad_pics"),
                ),
                (
                    "category",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="Listings.category",
                    ),
                ),
                (
                    "posted_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
